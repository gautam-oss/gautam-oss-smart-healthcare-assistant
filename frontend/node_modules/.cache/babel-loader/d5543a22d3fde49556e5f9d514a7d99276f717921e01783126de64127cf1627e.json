{"ast":null,"code":"var _jsxFileName = \"D:\\\\smart-healthcare-assistant\\\\frontend\\\\src\\\\components\\\\DoctorDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DoctorDashboard() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [classificationResult, setClassificationResult] = useState(null);\n  const [error, setError] = useState(null);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setError('Please select a file first.');\n      return;\n    }\n    setError(null);\n    setClassificationResult(null);\n    const formData = new FormData();\n    formData.append('xray_image', selectedFile);\n    try {\n      const token = localStorage.getItem('access_token'); // Assuming token is stored here\n      const response = await axios.post('http://localhost:8000/api/reports/upload-xray/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setClassificationResult(response.data.classification);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'An error occurred during upload.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Doctor Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"xray_upload\",\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          children: \"Upload X-ray Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"xray_upload\",\n          accept: \"image/*\",\n          onChange: handleFileChange,\n          className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        className: \"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n        children: \"Upload and Classify X-ray\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), classificationResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 p-4 bg-blue-100 text-blue-800 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold\",\n        children: \"Classification Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: classificationResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 p-4 bg-red-100 text-red-800 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold\",\n        children: \"Error:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorDashboard, \"OZ89kTPAFbl4NYy3UQJ5Np46wf4=\");\n_c = DoctorDashboard;\nexport default DoctorDashboard;\nvar _c;\n$RefreshReg$(_c, \"DoctorDashboard\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","DoctorDashboard","_s","selectedFile","setSelectedFile","classificationResult","setClassificationResult","error","setError","handleFileChange","event","target","files","handleUpload","formData","FormData","append","token","localStorage","getItem","response","post","headers","Authorization","data","classification","err","_err$response","_err$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","accept","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/smart-healthcare-assistant/frontend/src/components/DoctorDashboard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction DoctorDashboard() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [classificationResult, setClassificationResult] = useState(null);\n  const [error, setError] = useState(null);\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setError('Please select a file first.');\n      return;\n    }\n\n    setError(null);\n    setClassificationResult(null);\n\n    const formData = new FormData();\n    formData.append('xray_image', selectedFile);\n\n    try {\n      const token = localStorage.getItem('access_token'); // Assuming token is stored here\n      const response = await axios.post(\n        'http://localhost:8000/api/reports/upload-xray/',\n        formData,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      setClassificationResult(response.data.classification);\n    } catch (err) {\n      setError(err.response?.data?.error || 'An error occurred during upload.');\n    }\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h2 className=\"text-2xl font-bold mb-4\">Doctor Dashboard</h2>\n      <div className=\"bg-white p-6 rounded shadow-md\">\n        <div className=\"mb-4\">\n          <label htmlFor=\"xray_upload\" className=\"block text-gray-700 text-sm font-bold mb-2\">\n            Upload X-ray Image:\n          </label>\n          <input\n            type=\"file\"\n            id=\"xray_upload\"\n            accept=\"image/*\"\n            onChange={handleFileChange}\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          />\n        </div>\n        <button\n          onClick={handleUpload}\n          className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n        >\n          Upload and Classify X-ray\n        </button>\n      </div>\n\n      {classificationResult && (\n        <div className=\"mt-6 p-4 bg-blue-100 text-blue-800 rounded\">\n          <h3 className=\"text-lg font-semibold\">Classification Result:</h3>\n          <p>{classificationResult}</p>\n        </div>\n      )}\n\n      {error && (\n        <div className=\"mt-6 p-4 bg-red-100 text-red-800 rounded\">\n          <h3 className=\"text-lg font-semibold\">Error:</h3>\n          <p>{error}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default DoctorDashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACQ,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtE,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMY,gBAAgB,GAAIC,KAAK,IAAK;IAClCN,eAAe,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACV,YAAY,EAAE;MACjBK,QAAQ,CAAC,6BAA6B,CAAC;MACvC;IACF;IAEAA,QAAQ,CAAC,IAAI,CAAC;IACdF,uBAAuB,CAAC,IAAI,CAAC;IAE7B,MAAMQ,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEb,YAAY,CAAC;IAE3C,IAAI;MACF,MAAMc,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;MACpD,MAAMC,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,IAAI,CAC/B,gDAAgD,EAChDP,QAAQ,EACR;QACEQ,OAAO,EAAE;UACP,cAAc,EAAE,qBAAqB;UACrCC,aAAa,EAAE,UAAUN,KAAK;QAChC;MACF,CACF,CAAC;MACDX,uBAAuB,CAACc,QAAQ,CAACI,IAAI,CAACC,cAAc,CAAC;IACvD,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZpB,QAAQ,CAAC,EAAAmB,aAAA,GAAAD,GAAG,CAACN,QAAQ,cAAAO,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcH,IAAI,cAAAI,kBAAA,uBAAlBA,kBAAA,CAAoBrB,KAAK,KAAI,kCAAkC,CAAC;IAC3E;EACF,CAAC;EAED,oBACEP,OAAA;IAAK6B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB9B,OAAA;MAAI6B,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7DlC,OAAA;MAAK6B,SAAS,EAAC,gCAAgC;MAAAC,QAAA,gBAC7C9B,OAAA;QAAK6B,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnB9B,OAAA;UAAOmC,OAAO,EAAC,aAAa;UAACN,SAAS,EAAC,4CAA4C;UAAAC,QAAA,EAAC;QAEpF;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRlC,OAAA;UACEoC,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,aAAa;UAChBC,MAAM,EAAC,SAAS;UAChBC,QAAQ,EAAE9B,gBAAiB;UAC3BoB,SAAS,EAAC;QAA4H;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNlC,OAAA;QACEwC,OAAO,EAAE3B,YAAa;QACtBgB,SAAS,EAAC,gHAAgH;QAAAC,QAAA,EAC3H;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAEL7B,oBAAoB,iBACnBL,OAAA;MAAK6B,SAAS,EAAC,4CAA4C;MAAAC,QAAA,gBACzD9B,OAAA;QAAI6B,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAC;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjElC,OAAA;QAAA8B,QAAA,EAAIzB;MAAoB;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CACN,EAEA3B,KAAK,iBACJP,OAAA;MAAK6B,SAAS,EAAC,0CAA0C;MAAAC,QAAA,gBACvD9B,OAAA;QAAI6B,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjDlC,OAAA;QAAA8B,QAAA,EAAIvB;MAAK;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChC,EAAA,CA9EQD,eAAe;AAAAwC,EAAA,GAAfxC,eAAe;AAgFxB,eAAeA,eAAe;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}